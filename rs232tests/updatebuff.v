// File: updatebuff.v
// Generated by MyHDL 0.11
// Date: Wed Feb  3 17:25:42 2021


`timescale 1ns/10ps

module updatebuff (
    iClk,
    iRst,
    iData_UPDATE,
    WriteEnable_UPDATE,
    ldData,
    oWrBuffer_full_UPDATE,
    obusy,
    rom_dout,
    rom_addr
);


input iClk;
input iRst;
output [7:0] iData_UPDATE;
reg [7:0] iData_UPDATE;
output WriteEnable_UPDATE;
reg WriteEnable_UPDATE;
output [7:0] ldData;
reg [7:0] ldData;
input oWrBuffer_full_UPDATE;
output obusy;
reg obusy;
input [7:0] rom_dout;
output [3:0] rom_addr;
reg [3:0] rom_addr;

reg [4:0] read_addr;
wire sig;
reg [2:0] state1;

assign sig = 1'd0;


always @(posedge iClk, negedge iRst) begin: UPDATEBUFF_RTL
    if ((iRst == 0)) begin
        iData_UPDATE <= 0;
        ldData <= 0;
        WriteEnable_UPDATE <= 0;
        read_addr <= 0;
        obusy <= 0;
        state1 <= 3'b000;
    end
    else begin
        state1 <= 3'b000;
        case (state1)
            3'b000: begin
                if (((!WriteEnable_UPDATE) && (!oWrBuffer_full_UPDATE))) begin
                    ldData <= rom_dout;
                    obusy <= 1;
                    state1 <= 3'b001;
                end
            end
            3'b001: begin
                state1 <= 3'b010;
            end
            3'b010: begin
                iData_UPDATE <= ldData;
                WriteEnable_UPDATE <= 1;
                state1 <= 3'b011;
            end
            3'b011: begin
                WriteEnable_UPDATE <= 0;
                if ((rom_addr < 11)) begin
                    rom_addr <= (rom_addr + 1);
                    state1 <= 3'b100;
                end
                else begin
                    rom_addr <= 0;
                    state1 <= 3'b000;
                end
            end
            3'b100: begin
                WriteEnable_UPDATE <= 0;
                state1 <= 3'b101;
            end
            3'b101: begin
                if ((!sig)) begin
                    state1 <= 3'b101;
                end
                else begin
                    state1 <= 3'b110;
                end
            end
            default: begin
                if ((state1 == 3'b110)) begin
                    obusy <= 0;
                    state1 <= 3'b000;
                end
            end
        endcase
    end
end

endmodule
